version: '3.8'

services:
  # MySQL数据库服务
  mysql:
    image: mysql:8.0
    container_name: aq3stat-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-aq3stat}
      MYSQL_USER: ${MYSQL_USER:-aq3stat}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-aq3stat_password}
      MYSQL_CHARSET: utf8mb4
      MYSQL_COLLATION: utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - ./migrations/aq3stat.sql:/docker-entrypoint-initdb.d/01-aq3stat.sql:ro
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    networks:
      - aq3stat-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-root_password}"]
      timeout: 20s
      retries: 10
      interval: 30s

  # 后端应用服务
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
      args:
        - GO_VERSION=${GO_VERSION:-1.20}
    container_name: aq3stat-backend
    restart: unless-stopped
    environment:
      # 应用配置
      ENV: ${ENV:-production}
      SERVER_PORT: ${SERVER_PORT:-8080}

      # 数据库配置
      DB_HOST: mysql
      DB_PORT: "3306"
      DB_USER: ${MYSQL_USER:-aq3stat}
      DB_PASSWORD: ${MYSQL_PASSWORD:-aq3stat_password}
      DB_NAME: ${MYSQL_DATABASE:-aq3stat}

      # JWT配置
      JWT_SECRET: ${JWT_SECRET:-your_jwt_secret_change_in_production}
      JWT_EXPIRATION: ${JWT_EXPIRATION:-24h}

      # 日志配置
      LOG_LEVEL: ${LOG_LEVEL:-info}
      LOG_FILE: /var/log/aq3stat/app.log

      # 安全配置
      CORS_ORIGINS: ${CORS_ORIGINS:-"*"}
      RATE_LIMIT: ${RATE_LIMIT:-"100"}

      # 功能配置
      REDIS_ENABLED: "false"
      MAIL_ENABLED: "false"
      GEO_ENABLED: "true"
      REALTIME_STATS: "true"
      GZIP_ENABLED: "true"
      DEBUG: "false"
    volumes:
      - app_logs:/var/log/aq3stat
      - app_uploads:/opt/aq3stat/uploads
    ports:
      - "${SERVER_PORT:-8080}:8080"
    networks:
      - aq3stat-network
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/api/health"]
      timeout: 10s
      retries: 3
      interval: 30s

  # 前端Nginx服务
  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile
      args:
        - NODE_VERSION=${NODE_VERSION:-18}
        - VUE_APP_API_BASE_URL=${VUE_APP_API_BASE_URL:-/api}
    container_name: aq3stat-frontend
    restart: unless-stopped
    volumes:
      - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./configs/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "${HTTP_PORT:-80}:80"
    networks:
      - aq3stat-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      timeout: 10s
      retries: 3
      interval: 30s

# 数据卷定义
volumes:
  mysql_data:
    driver: local
  app_logs:
    driver: local
  app_uploads:
    driver: local

# 网络定义
networks:
  aq3stat-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
